{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter.js","TodoItem.js","TodoSearch.js","TodoList.js","CreateTodoButton.js","Modal/index.js","TodoForm/index.js","TodosLoading/index.js","EmptyTodos/index.js","TodoError/index.js","AppUI.js","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","Consumer","TodoCounter","useContext","className","TodoItem","onClick","onComplete","onDelete","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewnewTodoValue","onSubmit","preventDefault","type","TodosLoading","EmptyTodos","TodosError","AppUI","Fragment","map","App","render"],"mappings":"+VAEMA,EAAcC,IAAMC,gBAI1B,SAASC,EAAaC,GAClB,MCJA,SAAyBC,EAAUC,GAC/B,MAA0BL,IAAMM,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BR,IAAMM,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBV,IAAMM,SAASD,GAAvC,mBAAOM,EAAP,KAAaC,EAAb,KAqCE,OAjCFZ,IAAMa,WAAU,WACdC,YAAW,WACT,IACJ,IAGIC,EAHEC,EAAmBC,aAAaC,QAAQd,GAKzCY,EAMHD,EAAaI,KAAKC,MAAMJ,IAJxBC,aAAaL,QAAQR,EAAUe,KAAKE,UAAU,CAAChB,KAC/CU,EAAaV,GAMfO,EAAQG,GACRL,GAAW,GACX,MAAMH,GACNC,EAASD,MAER,QAWQ,CAACI,OACNW,SATe,SAACC,GAEhB,IAAMC,EAAkBL,KAAKE,UAAUE,GAEvCN,aAAaL,QAAQR,EAAUoB,GAE/BZ,EAAQW,IAIRd,UACAF,SDlCFkB,CAAgB,WAAY,IAJxBC,EADV,EACIf,KACUgB,EAFd,EAEIL,SACAb,EAHJ,EAGIA,QACAF,EAJJ,EAIIA,MAEF,EAAsCP,IAAMM,SAAS,IAArD,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAAkC7B,IAAMM,UAAS,GAAjD,mBAAOwB,EAAP,KAAkBC,EAAlB,KAKMC,EAAkBN,EAAMO,QAAO,SAAAC,GAAI,QAAOA,EAAKC,aAAWC,OAC1DC,EAAcX,EAAMU,OAEtBE,EAAgB,GAElBA,GADEV,EAAYQ,QAAU,EACPV,EAEAA,EAAMO,QAAO,SAAAC,GAC5B,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAcd,EAAYa,cAChC,OAAOF,EAASI,SAASD,MAoC/B,OAEJ,aADA,CACC3C,EAAY6C,SAAb,CAAsBC,MAAO,CAC7BpC,UACAF,QACA8B,aACAL,iBACAJ,cACAC,iBACAS,gBACAQ,QA1CkB,SAACN,GACf,IAAMO,EAAQ,YAAOrB,GAGnBqB,EAASC,KAAK,CACdb,WAAW,EACXK,SAEFb,EAAUoB,IAmCdE,aAhCyB,SAACT,GAGpB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAElDO,EAAQ,YAAOrB,GACrBqB,EAASG,GAAWf,WAAY,EAEhCR,EAAUoB,IAyBhBK,WAnBuB,SAACZ,GAClB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAClDO,EAAQ,YAAOrB,GACrBqB,EAASM,OAAOH,EAAW,GAC3BvB,EAAUoB,IAiBhBjB,YACAC,gBAbA,SAgBC5B,EAAMmD,WASNvD,EAAYwD,S,MErFb,SAASC,IACL,MAAqCxD,IAAMyD,WAAW1D,GAA/CsC,EAAP,EAAOA,WAAYL,EAAnB,EAAmBA,eACnB,OACI,qBAAI0B,UAAU,cAAd,4BAA4C1B,EAA5C,OAAgEK,EAAhE,Y,MCRR,SAASsB,EAASxD,GAOd,OACI,qBAAIuD,UAAU,WAAd,UACI,sBAAMA,UAAS,0BAAqBvD,EAAMgC,WAAa,sBACvDyB,QAASzD,EAAM0D,WADf,oBAGA,mBAAGH,UAAS,qBAAgBvD,EAAMgC,WAAa,wBAA/C,SAA0EhC,EAAMqC,OAChF,sBAAMkB,UAAU,mBAChBE,QAASzD,EAAM2D,SADf,kB,MCXZ,SAASC,IACL,MAAsC/D,IAAMyD,WAAW1D,GAAhD6B,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eAMpB,OACI,uBAAO6B,UAAU,aAAaM,YAAY,UAC1CnB,MAAOjB,EACPqC,SAPwB,SAACC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOxB,OACzBhB,EAAeqC,EAAMG,OAAOxB,UCPpC,SAASyB,EAASnE,GACd,OACI,kCACKA,EAAMmD,W,MCFnB,SAASiB,EAAiBpE,GAOxB,OACE,wBACAuD,UAAU,mBACVE,QAToB,WAGpBzD,EAAM4B,cAAa,SAAAyC,GAAS,OAAKA,MAIjC,e,MCRJ,SAASC,EAAT,GAA2B,IAAXnB,EAAU,EAAVA,SACZ,OAAOoB,IAASC,aACZ,qBAAKjB,UAAU,kBAAf,SACGJ,IAEHsB,SAASC,eAAe,U,MCJhC,SAASC,IACL,MAA2C9E,IAAMM,SAAS,IAA1D,mBAAOyE,EAAP,KAAqBC,EAArB,KACA,EAGShF,IAAMyD,WAAW1D,GAFtB+C,EADJ,EACIA,QACAf,EAFJ,EAEIA,aAeJ,OAEI,uBAAMkD,SARO,SAACf,GACdA,EAAMgB,iBACNpC,EAAQiC,GACRhD,GAAa,IAKb,UACI,0DACA,0BACAc,MAAOkC,EACPd,SAlBS,SAACC,GACfc,EAAmBd,EAAMG,OAAOxB,QAkB3BmB,YAAY,YACZ,sBAAKN,UAAU,2BAAf,UACJ,wBACEyB,KAAK,SACLzB,UAAU,yCACVE,QArBW,WACb7B,GAAa,IAiBb,sBAQA,wBACE2B,UAAU,sCACVyB,KAAM,SAFR,6BCtCR,SAASC,IACL,OACA,sBAAK1B,UAAU,wBAAf,UACI,sBAAMA,UAAU,8BACf,mBAAGA,UAAU,mBAAb,8BACA,sBAAMA,UAAU,8BCNzB,SAAS2B,IACL,OAAO,qDCDX,SAASC,IACL,OAAO,qDCYX,SAASC,IAEP,MAOMvF,IAAMyD,WAAW1D,GAPhBQ,EAAP,EAAOA,MACLE,EADF,EACEA,QACA6B,EAFF,EAEEA,cACAW,EAHF,EAGEA,aACCG,EAJH,EAIGA,WACDtB,EALF,EAKEA,UACAC,EANF,EAMEA,aAGA,OACI,eAAC,IAAMyD,SAAP,WACA,cAAC,EAAD,IAKA,cAAC,EAAD,IAKK,eAAClB,EAAD,WACC/D,GAAS,cAAC+E,EAAD,CAAY/E,MAAOA,IAC7BE,GAAW,cAAC2E,EAAD,KACT3E,IAAY6B,EAAcF,QAAW,cAACiD,EAAD,IACrC/C,EAAcmD,KAAI,SAAAvD,GAAI,OACrB,cAAC,EAAD,CACgBM,KAAMN,EAAKM,KAC3BL,UAAWD,EAAKC,UAChB0B,WAAY,kBAAIZ,EAAaf,EAAKM,OAClCsB,SAAU,kBAAIV,EAAWlB,EAAKM,QAHzBN,EAAKM,cASXV,GACD,cAAC,EAAD,UACA,cAAC,EAAD,MAKN,cAAC,EAAD,CACAC,aAAcA,OCnCP2D,MAVf,WAGE,OACC,cAACxF,EAAD,UACA,cAACqF,EAAD,OCdHb,IAASiB,OAEL,cAAC,EAAD,IAEFf,SAASC,eAAe,W","file":"static/js/main.a51828a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\nconst TodoContext = React.createContext();\r\n// la funcion va hacer una atajo para llegar a \r\n// todocounte.provider darle los estados que queremos compartir\r\n\r\nfunction TodoProvider(props){\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', []);\r\n      const [searchValue, setSearchValue] = React.useState('');\r\n      const [openModal, setOpenModal] = React.useState(false)\r\n    \r\n      // const [searchValue, setSearchValue] = React.useState('');\r\n      \r\n      // const completedItem = Item.filter(todo => todo.completed == true);\r\n      const completedTodos  = todos.filter(todo  => !!todo.completed).length;\r\n      const totalTodos  = todos.length;\r\n    \r\n      let searchedTodos = [];\r\n      if(!searchValue.length >= 1){\r\n        searchedTodos  = todos\r\n      }else{\r\n        searchedTodos  = todos.filter(todo => {\r\n          const todoText = todo.text.toLowerCase();\r\n          const searchText =  searchValue.toLowerCase();\r\n          return todoText.includes(searchText)\r\n        });\r\n      }\r\n    \r\n  const addTodo = (text) =>{\r\n    const newTodos = [...todos];\r\n    // iniciar un nuevo objeto\r\n    // enviamos esos datos al conectar context\r\n      newTodos.push({\r\n      completed: false,\r\n      text,\r\n    });\r\n    saveTodos(newTodos);\r\n      \r\n    }; \r\n    const completeTodo = (text) =>{\r\n    // entrar la posicion de la lista y modificarlo encontar \r\n    // ese todo cual condicion debe cambiar para editarlo\r\n      const todoIndex = todos.findIndex(todo => todo.text === text);\r\n      // sprint opereitor ... newItem inyectar Item los Item\r\n      const newTodos = [...todos];\r\n      newTodos[todoIndex].completed = true;\r\n      // actualizar nuestro estado\r\n      saveTodos(newTodos);\r\n      // Item[todoIndex] = {\r\n      //   text: Item[todoIndex].text,\r\n      //   completed: true\r\n      // }\r\n    };\r\n    const deleteTodo = (text) =>{\r\n      const todoIndex = todos.findIndex(todo => todo.text === text);\r\n      const newTodos = [...todos];\r\n      newTodos.splice(todoIndex, 1);\r\n      saveTodos(newTodos);\r\n    \r\n    }\r\n    return(\r\n//  este provider va envolver esta aplicacion\r\n<TodoContext.Provider value={{\r\nloading,\r\nerror,\r\ntotalTodos,\r\ncompletedTodos,\r\nsearchValue,\r\nsetSearchValue,\r\nsearchedTodos,\r\naddTodo,\r\ncompleteTodo,\r\ndeleteTodo,\r\n// props del modal pasados al componente appui.js\r\nopenModal,\r\nsetOpenModal,\r\n}}>\r\n{/* tenga por dentro cual quier omponente para que llame aqui y utiilzar los props para consumir*/}\r\n{props.children}\r\n</TodoContext.Provider>\r\n\r\n    )\r\n}\r\n\r\n// envuelve la aplicacion en app context\r\n\r\n\r\n<TodoContext.Consumer></TodoContext.Consumer>\r\n\r\nexport {TodoContext, TodoProvider};","import React from \"react\";\r\n\r\n\r\n    function useLocalStorage(itemName, initialValue) {\r\n        const [error, setError] = React.useState(false);\r\n        const [loading, setLoading] = React.useState(true);\r\n        const [item, setItem] = React.useState(initialValue);\r\n      \r\n        // localstorage.getitem permite agreagar \r\n        // El método getItem() de la interfaz Storage devuelve el valor de la clave cuyo nombre se le pasa por parámetro.\r\n        React.useEffect(() => {\r\n          setTimeout(() => {\r\n            try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        // variable declarada vacia para que inicio si null o 0 \r\n        // paraque inicie a guardar las tareas al inicio de un usuario nuevo\r\n        let parsedItem; //se envia al reack hook \r\n      // un condicional: verificar si no hay nada en local storage\r\n        if (!localStorageItem) {\r\n          // setitem va crear elemento Item_v1, al principioo va hacer un arrary vacio\r\n          localStorage.setItem(itemName, JSON.stringify([initialValue]));\r\n          parsedItem = initialValue; //cuando recien entremos el array ess vacio\r\n        } else { // si no ya yiene unos Item o tarea creados\r\n          // parse convierte un array con Item eos usuarios\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n      \r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n      } catch(error) {\r\n        setError(error);\r\n      }\r\n      }, 1000);\r\n      });\r\n          // funcion como puente llama \r\n          const saveItem = (newItem) => {\r\n            // convertir en un string todo los Items\r\n            const stringifiedItem = JSON.stringify(newItem);\r\n            // llamar local storange guardar esta informacion Item_v1\r\n            localStorage.setItem(itemName, stringifiedItem);\r\n            // modificar el estado\r\n            setItem(newItem);\r\n          };\r\n          return {item, \r\n            saveItem, \r\n            loading,\r\n            error,\r\n        }\r\n      }\r\n\r\nexport {useLocalStorage};","import React from \"react\";\r\nimport { TodoContext} from './TodoContext'\r\nimport './TodoCounter.css'\r\n// const estilos={  \r\n//     color: 'red',\r\n//     backgroundColor:'yellow',\r\n// }\r\nfunction TodoCounter(){\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext)\r\n    return(\r\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\r\n    );\r\n}\r\n// obliga al importar el modulo a escribirlo exactamente\r\nexport {TodoCounter};","import React from \"react\";\r\nimport './TodoItem.css'\r\nfunction TodoItem(props){\r\n    // const onComplete =()=>{\r\n    //     alert('Aqui Completaste el todo ' + props.text)\r\n    // }\r\n    // const onDelete =()=>{\r\n    //     alert('Borraste el todo ' + props.text)\r\n    // }\r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n            onClick={props.onComplete}\r\n            >√</span>\r\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>{props.text}</p>\r\n            <span className=\"Icon Icon-delete\"\r\n            onClick={props.onDelete}\r\n            >X</span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport {TodoItem};","import React from \"react\";\r\nimport { TodoContext } from \"./TodoContext\";\r\nimport './TodoSearch.css';\r\n\r\nfunction TodoSearch(){\r\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\r\n\r\n    const onSearchValueChange = (event)=>{\r\n        console.log(event.target.value);\r\n        setSearchValue(event.target.value);\r\n    }\r\n    return(\r\n        <input className=\"TodoSearch\" placeholder=\"Cebolla\"\r\n        value={searchValue} \r\n        onChange={onSearchValueChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport {TodoSearch};","import React from \"react\";\r\n\r\nfunction TodoList(props){\r\n    return(\r\n        <section>\r\n            {props.children}\r\n        </section>\r\n    );\r\n    \r\n}\r\n\r\nexport {TodoList};","import React from 'react';\r\nimport './CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton(props) {\r\n  const onClickButton = () =>{\r\n    // realizar una funcion que devuelva el o retorne en setOpenModal para enviar a setOpenModeal\r\n    // para cerrar el modal\r\n    props.setOpenModal(prevState => !prevState)\r\n    \r\n  };\r\n  return (\r\n    <button \r\n    className=\"CreateTodoButton\"\r\n    onClick={onClickButton}\r\n    >+</button>\r\n  );\r\n}\r\n\r\nexport { CreateTodoButton };","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './Modal.css';\r\nfunction Modal({children}){\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n          {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n      );\r\n}\r\nexport {Modal};","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm(){\r\n    const [newTodoValue, setNewnewTodoValue] = React.useState('')\r\n    const {\r\n        addTodo,\r\n        setOpenModal\r\n          }= React.useContext(TodoContext);\r\n    // manejador\r\n    const onChange = (event) =>{\r\n       setNewnewTodoValue(event.target.value)\r\n    }\r\n    const onCancel = ()=>{\r\n        setOpenModal(false)\r\n    }\r\n    const onSubmit = (event)=>{\r\n        event.preventDefault();\r\n        addTodo(newTodoValue)\r\n        setOpenModal(false)\r\n\r\n    }\r\n    return(\r\n        \r\n        <form onSubmit={onSubmit}>\r\n            <label>Escriba tu nuevo TODO</label>\r\n            <textarea \r\n            value={newTodoValue}\r\n            onChange={onChange}\r\n            placeholder=\"escribe\" />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button-cancel\"\r\n          onClick = {onCancel}\r\n        >\r\n          Cancelar\r\n        </button>\r\n\r\n        <button\r\n          className=\"TodoForm-button TodoForm-button-add\"\r\n          type= \"submit\"\r\n        >\r\n          Añadir\r\n          </button>\r\n      </div>\r\n        </form>\r\n    );\r\n}\r\nexport {TodoForm};","import React from 'react';\r\n\r\nfunction TodosLoading(){\r\n    return (\r\n    <div className='LoadingTodo-container'>\r\n        <span className='Loading-Todo-completeIcon'></span>\r\n         <p className='LoadingTodo-text'>Estamos cargando</p>\r\n         <span className='LoadingTodo-deleteIcon'></span>\r\n    </div>)\r\n}\r\nexport {TodosLoading}\r\n\r\n","import React from 'react';\r\nfunction EmptyTodos(){\r\n    return <p>Crea tu primer TODO!</p>\r\n}\r\nexport {EmptyTodos}\r\n\r\n","import React from 'react';\r\nfunction TodosError(){\r\n    return <p>Crea tu primer TODO!</p>\r\n}\r\nexport {TodosError}\r\n\r\n","import React from \"react\";\r\nimport { TodoContext } from \"./TodoContext\";\r\nimport { TodoCounter } from \"./TodoCounter\";\r\nimport { TodoItem } from \"./TodoItem\";\r\nimport { TodoSearch } from \"./TodoSearch\";\r\nimport {TodoList} from \"./TodoList\";\r\nimport { CreateTodoButton } from \"./CreateTodoButton\";\r\nimport {Modal} from \"./Modal\"\r\nimport {TodoForm} from \"./TodoForm\"\r\nimport { TodosLoading } from \"./TodosLoading\";\r\nimport { EmptyTodos } from \"./EmptyTodos\";\r\nimport {TodosError} from \"./TodoError\" \r\n\r\n\r\nfunction AppUI(){\r\n  // asignar el valor a value\r\n  const {error, \r\n    loading, \r\n    searchedTodos, \r\n    completeTodo,\r\n     deleteTodo,\r\n    openModal,\r\n    setOpenModal\r\n    } = React.useContext(TodoContext);\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <TodoCounter \r\n        // total={totalTodos} \r\n        // completed={completedTodos}\r\n     \r\n        />\r\n        <TodoSearch \r\n        />\r\n        \r\n        \r\n  \r\n             <TodoList> \r\n             {error && <TodosError error={error} />}\r\n            {loading && <TodosLoading />}\r\n            {(!loading && !searchedTodos.length) && <EmptyTodos />}\r\n              {searchedTodos.map(todo=>(\r\n                <TodoItem \r\n                key={todo.text} text={todo.text} \r\n                completed={todo.completed} \r\n                onComplete={()=>completeTodo(todo.text)}\r\n                onDelete={()=>deleteTodo(todo.text)}\r\n                />\r\n              ))} \r\n              \r\n            </TodoList>\r\n            {/* MODAL */}\r\n            {!!openModal && (\r\n              <Modal>\r\n              <TodoForm />\r\n            </Modal>\r\n            )}\r\n          {/* )} */}\r\n        {/* </TodoContext.Consumer> */}\r\n        <CreateTodoButton \r\n        setOpenModal={setOpenModal}\r\n        />\r\n     </React.Fragment>\r\n    );\r\n}\r\n\r\nexport {AppUI}","import React from \"react\";\nimport { TodoProvider } from \"./TodoContext\";\nimport { AppUI } from \"./AppUI\";\n\n// import './App.css';\n// const defaultItem = [\n//   {text: 'Cortar cebolla' , completed: true},\n//   {text: 'data scines' , completed:false},\n//   {text:  'backend' , completed:false}\n\n// ]\n// el nombre de customer react hook\n// extraer la logica de localstorage\n// los parametros recoge los elementos  que van a cambiar\n\nfunction App() {\n  // const [Item, saveItem] = useLocalStorage('Item_V1');\n  \n  return (\n   <TodoProvider>\n   <AppUI />\n   </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}